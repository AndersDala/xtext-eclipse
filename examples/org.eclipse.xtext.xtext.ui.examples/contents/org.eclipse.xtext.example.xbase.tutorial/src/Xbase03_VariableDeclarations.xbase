/*
 * Xbase variable declarations look a bit different to those in Java.
 * 
 */
 
val x = 'A final value'
// A final value (void)
var y = 'A non-final variable'
// A non-final variable (void)

//x = 'not allowed'
y = 'can be modified'
// can be modified (String)

/*
 * The type can be specified optionally
 */
 
val String s = "my String"
// my String (void)

/*
 * Generally Variable Declarations are only allowed within a Block, in this language (pure xbase) 
 * the whole script is one block expression, which is why variable declaratuons are allowed without
 * curly braces.
 * A block expression is just a list of expressions which are all executed and the result and the type is computed from the last expression.
 * They can be used in a deeply nested fashion.
 */

{
	{
		{
			val s = 'foo'
			s
		}
	}
}
// foo (String)
