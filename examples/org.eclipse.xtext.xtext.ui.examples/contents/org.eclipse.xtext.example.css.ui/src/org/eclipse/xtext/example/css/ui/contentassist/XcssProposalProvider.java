/*
* generated by Xtext
*/
package org.eclipse.xtext.example.css.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.swt.widgets.Widget;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.common.types.JvmType;
import org.eclipse.xtext.common.types.access.IJvmTypeProvider;
import org.eclipse.xtext.common.types.access.TypeNotFoundException;
import org.eclipse.xtext.common.types.xtext.ui.ITypesProposalProvider;
import org.eclipse.xtext.example.css.ui.contentassist.AbstractXcssProposalProvider;
import org.eclipse.xtext.example.css.xcss.XcssPackage;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import com.google.inject.Inject;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class XcssProposalProvider extends AbstractXcssProposalProvider {

	@Inject
	private ITypesProposalProvider typesProposalProvider;
	
	@Inject
	private IJvmTypeProvider.Factory typeProviderFactory;
	
	@Override
	public void completeTypeSelector_Type(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		IJvmTypeProvider typeProvider = typeProviderFactory.findOrCreateTypeProvider(context.getResource().getResourceSet());
		try {
			JvmType widgetType = typeProvider.findTypeByName(Widget.class.getName());
			typesProposalProvider.createSubTypeProposals(widgetType, this, context, XcssPackage.Literals.TYPE_SELECTOR__TYPE, acceptor);
		} catch(TypeNotFoundException e) {
		}
	}
	
}
