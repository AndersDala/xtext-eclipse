<?xml version="1.0" encoding="UTF-8"?>
<!--
	Headless materialization of Xtext workspace

	Author: Lorenzo Bettini

	Properties:
		WORKSPACE  			where workspace will be generated,
							default: ${user.home}/workspaces/xtext-sources
		buckminster.home	Buckminster headless location
							default: ${user.home}/buckminster
							if not installed, it will be automatically installed
		git.clone.dest		where Xtext sources are (or will be) cloned
							${user.home}/git/org.eclipse.xtext
-->
<project name="worskspace" default="materialize.workspace">
	<property name="WORKSPACE" location="${user.home}/workspaces/xtext-sources" />
	<property name="projects.location" location="${WORKSPACE}" />
	<property name="git.clone.dest" location="${user.home}/git/org.eclipse.xtext-contr"/>
	<property name="checkout.location" location="${git.clone.dest}"/>
	<property name="target.platform.dir" value="target.platform" />
	<property name="target.platform" location="${WORKSPACE}/${target.platform.dir}" />
	<property name="eclipse.download" value="http://download.eclipse.org" />

	<property name="buckminster.home" location="${user.home}/buckminster" />
	<property name="b3.home" location="${user.home}/b3" />
		
	<property name="director.install.dest" location="${user.home}" />
	<property name="director.dir" location="${director.install.dest}/director" />
	<property name="director.url" value="http://download.eclipse.org/tools/buckminster/products/director_latest.zip" />

	<target name="materialize.workspace" depends="install.buckminster.headless,cleanup" >
		<echo message="output workspace     : ${WORKSPACE}" />
		<echo message="git clone repository : ${git.clone.dest}" />
		
		<antcall target="target.platform.path" />
		<antcall target="resolve.releng.project" />
		<antcall target="import.api.baseline" />
		<antcall target="add.baseline" />
		<antcall target="import.mspec" />
		<antcall target="resolve.cquery" />
		<antcall target="perform.build" />
		
		<echo message=" " />
		<echo message="Workspace materialized in: ${WORKSPACE}" />
	</target>

	<target name="target.platform.path" >
		<run_buckminster 
			command='setpref targetPlatformPath="${target.platform}"' 
		/>
	</target>
	
	<target name="resolve.releng.project" >
		<echo message="IMPORTANT: Initial cloning a git repository may took a while." />
		<run_buckminster 
			command="import --noimport file:/Users/dhuebner/git/org.eclipse.xtext/devtools/org.eclipse.xtext.contributor/xtext-contr.mspec" 
		/>
	</target>

	<target name="import.api.baseline" >
		<run_buckminster 
			command='importtargetdefinition "${checkout.location}/releng/org.eclipse.xtext.releng/api-baseline/api-baseline.target"' 
		/>
	</target>

	<target name="add.baseline" >
		<run_buckminster 
			command='addbaseline -A "api-baseline"' 
		/>
	</target>

	<target name="import.mspec" >
		<echo message="IMPORTANT: Populating an empty target platform may took over 10 minutes." />
		<run_buckminster 
			command='import ${checkout.location}/releng/org.eclipse.xtext.releng/releng/xtext-platform.mspec' 
		/>
	</target>

	<target name="resolve.cquery" >
		<run_buckminster 
			command='resolve file:/Users/dhuebner/git/org.eclipse.xtext/devtools/org.eclipse.xtext.contributor/xtext-contr.cquery' 
		/>
	</target>

	<target name="perform.build" >
		<run_buckminster 
			command='build' 
		/>
	</target>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: run_buckminster
          pass the commandsfile to execute      
         = = = = = = = = = = = = = = = = = -->
	<macrodef name="run_buckminster">
		<attribute name="command" default="default" />

		<sequential>
			<java fork="true" dir="${buckminster.home}" logError="true" classname="org.eclipse.core.launcher.Main" failonerror="true">
				<classpath>
					<fileset dir="${buckminster.home}/plugins">
						<include name="org.eclipse.equinox.launcher_*.jar" />
					</fileset>
				</classpath>
				<arg line='@{command}' />
				<arg line='-update' />
				<arg line='-data "${WORKSPACE}"' />
				<arg line='-configuration "${WORKSPACE}/configuration"' />
				<!-- <arg line='-L DEBUG' /> -->
				<sysproperty key="projects.location" value="${projects.location}" />
				<sysproperty key="git.clone.dest" value="${git.clone.dest}" />
				<sysproperty key="checkout.location" value="${checkout.location}" />
				<sysproperty key="eclipse.download" value="${eclipse.download}" />
				<sysproperty key="ECLIPSE.TARGET.ALIAS" value="Galileo" />
				<jvmarg line=" -Xms256m -Xmx1024m -XX:MaxPermSize=256M" />
			</java>
		</sequential>
	</macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: run_b3_aggregator
          pass the commandsfile to execute      
         = = = = = = = = = = = = = = = = = -->
	<macrodef name="run_b3_aggregator">
		<attribute name="buildmodel" default="default" />
		<sequential>
			<java fork="true" dir="${b3.home}" logError="true" classname="org.eclipse.core.launcher.Main" failonerror="true">
				<classpath>
					<fileset dir="${b3.home}/plugins">
						<include name="org.eclipse.equinox.launcher_*.jar" />
					</fileset>
				</classpath>
				<arg line='aggregate' />
				<arg line='--buildModel "@{buildmodel}"' />
				<!-- <arg line='-L DEBUG' /> -->
				<jvmarg line=" -Xms256m -Xmx512m" />
			</java>
		</sequential>
	</macrodef>

	<target name="cleanup">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${WORKSPACE}" defaultexcludes="false">
				<exclude name="**/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/" />
				<exclude name="**/.metadata/.plugins/*mylyn*/" />
				<exclude name="**/.metadata/.mylyn/" />
				<exclude name="**/${target.platform.dir}/" />
			</fileset>
		</delete>
	</target>

	<target name="reset.target-platform">
		<delete includeemptydirs="true">
			<fileset dir="${WORKSPACE}" defaultexcludes="false">
				<include name="**/.metadata/.plugins/org.eclipse.pde.core/.bundle_pool/" />
				<include name="**/${target.platform.dir}/" />
			</fileset>
		</delete>
	</target>

	<target name="install.buckminster.headless">
		<condition property="buckminster.headless.installed">
			<available file="${buckminster.home}/buckminster" />
		</condition>
		<antcall target="install.buckminster.headless.internal" />
	</target>

	<target name="install.buckminster.headless.internal" unless="buckminster.headless.installed" >
		<antcall target="install.p2.director" />
		<echo message="" />
		<echo message="Installing Buckminster Headless into ${buckminster.home}..." />
		<java fork="true" dir="${director.dir}" logError="true" classname="org.eclipse.core.launcher.Main" failonerror="true">
			<sysproperty key="eclipse.p2.mirrors" value="false" />
			<classpath>
				<fileset dir="${director.dir}/plugins">
					<include name="org.eclipse.equinox.launcher_*.jar" />
				</fileset>
			</classpath>
			<arg line='-data "${director.dir}/workspace"' />
			<arg line="-r ${eclipse.download}/tools/buckminster/headless-4.2,${eclipse.download}/releases/juno/" />
			<arg line='-d "${buckminster.home}"' />
			<arg line="-p Buckminster" />
			<arg line="-i org.eclipse.buckminster.cmdline.product" />
			<arg line="-i org.eclipse.buckminster.core.headless.feature.feature.group" />
			<arg line="-i org.eclipse.buckminster.pde.headless.feature.feature.group" />
			<arg line="-i org.eclipse.buckminster.git.headless.feature.feature.group" />
		</java>
	</target>
	
	<target name="install.b3.headless">
		<condition property="b3.headless.installed">
			<available file="${b3.home}/b3" />
		</condition>
		<antcall target="install.b3.headless.internal" />
	</target>

	<target name="install.b3.headless.internal" unless="b3.headless.installed" >
		<antcall target="install.p2.director" />
		<echo message="" />
		<echo message="Installing B3 Headless into ${b3.home}..." />
		<java fork="true" dir="${director.dir}" logError="true" classname="org.eclipse.core.launcher.Main" failonerror="true">
			<sysproperty key="eclipse.p2.mirrors" value="false" />
			<classpath>
				<fileset dir="${director.dir}/plugins">
					<include name="org.eclipse.equinox.launcher_*.jar" />
				</fileset>
			</classpath>
			<arg line='-data "${director.dir}/workspace"' />
			<arg line="-r ${eclipse.download}/modeling/emft/b3/headless-4.2" />
			<arg line='-d "${b3.home}"' />
			<arg line="-p b3" />
			<arg line="-i org.eclipse.b3.cli.product" />
			<arg line="-i org.eclipse.b3.aggregator.engine.feature.feature.group" />
		</java>
	</target>

	<target name="install.p2.director">
		<condition property="p2.director.installed">
			<available file="${director.dir}" />
		</condition>
		<antcall target="install.p2.director.internal" />
	</target>

	<target name="install.p2.director.internal" unless="p2.director.installed">
		<echo message="" />
		<echo message="Installing director from ${director.url}..." />
		<tempfile destdir="${java.io.tmpdir}"
						          prefix="director-"
						          suffix=".zip"
						          property="director.zip"
						          deleteonexit="true" />
		<get src="${director.url}" dest="${director.zip}" />
		<unzip src="${director.zip}" dest="${director.install.dest}" />
		<delete file="${director.zip}" />
	</target>

</project>
