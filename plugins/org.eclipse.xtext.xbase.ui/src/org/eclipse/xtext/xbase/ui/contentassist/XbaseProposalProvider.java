/*
* generated by Xtext
*/
package org.eclipse.xtext.xbase.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class XbaseProposalProvider extends AbstractXbaseProposalProvider {
	
	@Override
	public void completeJvmParameterizedTypeReference_Type(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		if (context.getPrefix().length() > 0) {
			if (!Character.isJavaIdentifierStart(context.getPrefix().charAt(0)))
				return;
		}
		super.completeJvmParameterizedTypeReference_Type(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeXTypeLiteral_Type(EObject model, Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		if (context.getPrefix().length() > 0) {
			if (!Character.isJavaIdentifierStart(context.getPrefix().charAt(0)))
				return;
		}
		super.completeXTypeLiteral_Type(model, assignment, context, acceptor);
	}
	
	@Override
	public void completeKeyword(Keyword keyword, ContentAssistContext contentAssistContext,
			ICompletionProposalAcceptor acceptor) {
		if (keyword.getValue().length() > 1 && Character.isLetter(keyword.getValue().charAt(0))) { 
			super.completeKeyword(keyword, contentAssistContext, acceptor);
		}
	}
	
	@Override
	protected boolean doCreateIntProposals() {
		return false;
	}
	
	@Override
	protected boolean doCreateIdProposals() {
		return false;
	}
	
	@Override
	protected boolean doCreateStringProposals() {
		return false;
	}
}
