<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>

<plugin>
	<extension-point id="wizardContribution" name="Wizard Contribution" schema="schema/org.eclipse.xtext.xtext.ui.wizardContribution.exsd"/>
	 <extension
            point="org.eclipse.ui.editors">
        <editor
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.editor.XtextEditor"
            contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
            default="true"
            extensions="xtext,xtext2"
            id="org.eclipse.xtext.Xtext"
            name="Xtext Editor">
        </editor>
    </extension>
    <extension
        point="org.eclipse.ui.handlers">
        <handler
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.editor.hyperlinking.OpenDeclarationHandler"
            commandId="org.eclipse.xtext.ui.editor.hyperlinking.OpenDeclaration">
            <activeWhen>
                <reference
                    definitionId="org.eclipse.xtext.Xtext.Editor.opened">
                </reference>
            </activeWhen>
        </handler>
        <handler
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.editor.handler.ValidateActionHandler"
            commandId="org.eclipse.xtext.Xtext.validate">
         <activeWhen>
            <reference
                    definitionId="org.eclipse.xtext.Xtext.Editor.opened">
            </reference>
         </activeWhen>
      </handler>
    </extension>
    <extension point="org.eclipse.core.expressions.definitions">
        <definition id="org.eclipse.xtext.Xtext.Editor.opened">
            <and>
                <reference definitionId="isActiveEditorAnInstanceOfXtextEditor"/>
                <with variable="activeEditor">
                    <test property="org.eclipse.xtext.ui.editor.XtextEditor.languageName" 
                        value="org.eclipse.xtext.Xtext" 
                        forcePluginActivation="true"/>
                </with>        
            </and>
        </definition>
    </extension>
    <extension
            point="org.eclipse.ui.preferencePages">
        <page
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.editor.preferences.LanguageRootPreferencePage"
            id="org.eclipse.xtext.Xtext"
            name="Xtext">
            <keywordReference id="org.eclipse.xtext.ui.keyword_Xtext"/>
        </page>
        <page
            category="org.eclipse.xtext.Xtext"
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.editor.syntaxcoloring.SyntaxColoringPreferencePage"
            id="org.eclipse.xtext.Xtext.coloring"
            name="Syntax Coloring">
            <keywordReference id="org.eclipse.xtext.ui.keyword_Xtext"/>
        </page>
        <page
            category="org.eclipse.xtext.Xtext"
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.editor.templates.XtextTemplatePreferencePage"
            id="org.eclipse.xtext.Xtext.templates"
            name="Templates">
            <keywordReference id="org.eclipse.xtext.ui.keyword_Xtext"/>
        </page>
    </extension>
    <extension
        point="org.eclipse.ui.keywords">
        <keyword
            id="org.eclipse.xtext.ui.keyword_Xtext"
            label="Xtext"/>
    </extension>
    <extension
         point="org.eclipse.ui.commands">
      <command
            description="Trigger expensive validation"
            id="org.eclipse.xtext.Xtext.validate"
            name="Validate">
      </command>
    </extension>
    <extension point="org.eclipse.ui.menus">
        <menuContribution
            locationURI="popup:#TextEditorContext?after=group.edit">
             <command
                 commandId="org.eclipse.xtext.Xtext.validate"
                 style="push"
                 tooltip="Trigger expensive validation">
            <visibleWhen checkEnabled="false">
                <reference
                    definitionId="org.eclipse.xtext.Xtext.Editor.opened">
                </reference>
            </visibleWhen>
         </command>  
         </menuContribution>
    </extension>
    <extension point="org.eclipse.ui.menus">
		<menuContribution locationURI="popup:#TextEditorContext?endof=group.find">
			<command commandId="org.eclipse.xtext.ui.editor.FindReferences">
				<visibleWhen checkEnabled="false">
                	<reference definitionId="org.eclipse.xtext.Xtext.Editor.opened">
                	</reference>
            	</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension point="org.eclipse.ui.handlers">
	    <handler
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.editor.findrefs.FindReferencesHandler"
            commandId="org.eclipse.xtext.ui.editor.FindReferences">
            <activeWhen>
                <reference
                    definitionId="org.eclipse.xtext.Xtext.Editor.opened">
                </reference>
            </activeWhen>
        </handler>
    </extension>   

<!-- adding resource factories -->

	<extension
		point="org.eclipse.emf.ecore.extension_parser">
		<parser
			class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.resource.IResourceFactory"
			type="xtext">
		</parser>
	</extension>
	<extension point="org.eclipse.xtext.extension_resourceServiceProvider">
        <resourceServiceProvider
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.resource.IResourceUIServiceProvider"
            uriExtension="xtext">
        </resourceServiceProvider>
    </extension>

	<extension
		point="org.eclipse.emf.ecore.extension_parser">
		<parser
			class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.resource.IResourceFactory"
			type="xtext2">
		</parser>
	</extension>
	<extension point="org.eclipse.xtext.extension_resourceServiceProvider">
        <resourceServiceProvider
            class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.ui.resource.IResourceUIServiceProvider"
            uriExtension="xtext2">
        </resourceServiceProvider>
    </extension>

	<!-- Wizards -->
	<extension
		point="org.eclipse.ui.newWizards">
		<category
			name="Xtext"
			id="org.eclipse.xtext.projectwiz">
		</category>
		<wizard
			category="org.eclipse.xtext.projectwiz"
			class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.xtext.ui.wizard.project.NewXtextProjectWizard"
			icon="icons/editor.gif"
			id="org.eclipse.xtext.xtext.ui.wizard.project.NewXtextProjectWizard"
			name="%Xtext_Project"
			project="true">
		</wizard>
		<wizard
			category="org.eclipse.xtext.projectwiz"
			class="org.eclipse.xtext.ui.XtextExecutableExtensionFactory:org.eclipse.xtext.xtext.ui.wizard.ecore2xtext.NewXtextProjectFromEcoreWizard"
			icon="icons/editor.gif"
			id="org.eclipse.xtext.xtext.ui.wizard.ecore2xtext.NewXtextProjectFromEcoreWizard"
			name="%Xtext_Project_From_Ecore"
			project="true">
		</wizard>
	</extension>
	
	<!-- Outline context menu actions -->
	<!--
	<extension
		point="org.eclipse.ui.menus">
		<menuContribution
			locationURI="popup:org.eclipse.xtext.ui.outline?after=additions">
			<command
				commandId="org.eclipse.xtext.xtext.ui.editor.outline.SampleCommand"
				label="Sample action registered for ParserRule">
				<visibleWhen checkEnabled="false">
					<iterate>
						<adapt type="org.eclipse.xtext.ParserRule" />
					</iterate>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension
		point="org.eclipse.ui.commands">
		<command
			id="org.eclipse.xtext.xtext.ui.editor.outline.SampleCommand"
			name="Sample Command"
			description="Just a sample command">
		</command>
	</extension>
	<extension
		point="org.eclipse.ui.handlers">
		<handler
			class="org.eclipse.xtext.xtext.ui.editor.outline.SampleOulineNodeHandler"
			commandId="org.eclipse.xtext.xtext.ui.editor.outline.SampleCommand">
		</handler>
	</extension>
	-->
	
	<extension
         point="org.eclipse.xtext.xtext.ui.wizardContribution">
      <generatorConfiguration name="Standard">
         <MweSnippet>
<![CDATA[<property name="runtimeProject" value="../${projectName}"/>
	
	<bean class="org.eclipse.emf.mwe.utils.StandaloneSetup" platformUri="${runtimeProject}/.."/>
	
	<component class="org.eclipse.emf.mwe.utils.DirectoryCleaner" directory="${runtimeProject}/src-gen"/>
	<component class="org.eclipse.emf.mwe.utils.DirectoryCleaner" directory="${runtimeProject}.ui/src-gen"/>
	
	<component class="org.eclipse.xtext.generator.Generator">
		<pathRtProject value="${runtimeProject}"/>
		<pathUiProject value="${runtimeProject}.ui"/>
		<projectNameRt value="${projectName}"/>
		<projectNameUi value="${projectName}.ui"/>
		
		<language uri="${grammarURI}" fileExtensions="${file.extensions}">
			<!-- Java API to access grammar elements (required by several other fragments) -->
			<fragment class="org.eclipse.xtext.generator.grammarAccess.GrammarAccessFragment"/>
			
			<!-- generates Java API for the generated EPackages -->
			<fragment class="org.eclipse.xtext.generator.ecore.EcoreGeneratorFragment"/>
			
			<!-- the serialization component -->
			<fragment class="org.eclipse.xtext.generator.parseTreeConstructor.ParseTreeConstructorFragment"/>
			
			<!-- a custom ResourceFactory for use with EMF -->
			<fragment class="org.eclipse.xtext.generator.resourceFactory.ResourceFactoryFragment" 
				fileExtensions="${file.extensions}"/>
				
			<!-- the following fragment tries to use the Antlr Generator fragment which can be installed via update manager from http://download.itemis.com/updates/ -->
			<fragment class="org.eclipse.xtext.generator.AntlrDelegatingFragment" />
			
			<!-- If you don't want to use the Antlr fragment for some reason, remove the antlr fragment and uncomment the packrat parser fragment below.
			<fragment class="org.eclipse.xtext.generator.parser.PackratParserFragment"/>
			 -->
	
			<!-- check-based API for validation -->
			<!--
			<fragment class="org.eclipse.xtext.generator.validation.CheckFragment"/>
			 -->
			 
			<!-- java-based API for validation -->
			<fragment class="org.eclipse.xtext.generator.validation.JavaValidatorFragment">
                <composedCheck value="org.eclipse.xtext.validation.ImportUriValidator"/>
                <composedCheck value="org.eclipse.xtext.validation.NamesAreUniqueValidator"/>
            </fragment>
            
			<!-- scoping and exporting API -->
			<fragment class="org.eclipse.xtext.generator.scoping.ImportNamespacesScopingFragment"/>
			<fragment class="org.eclipse.xtext.generator.exporting.QualifiedNamesFragment"/>
			
			<!-- scoping and exporting API -->
			<!--
			<fragment class="org.eclipse.xtext.generator.scoping.ImportURIScopingFragment"/>
			<fragment class="org.eclipse.xtext.generator.exporting.SimpleNamesFragment"/>
			-->
			
			<!-- formatter API -->
			<fragment class="org.eclipse.xtext.generator.formatting.FormatterFragment"/>

			<!-- labeling API -->
			<fragment class="org.eclipse.xtext.ui.generator.labeling.LabelProviderFragment"/>

			<!-- outline API -->
			<fragment class="org.eclipse.xtext.ui.generator.outline.TransformerFragment"/>
			<fragment class="org.eclipse.xtext.ui.generator.outline.OutlineNodeAdapterFactoryFragment"/>

			<!-- java-based API for content assistance -->
			<fragment class="org.eclipse.xtext.ui.generator.contentAssist.JavaBasedContentAssistFragment"/>
			<!-- the following fragment tries to use the Antlr based content assist fragment which can be downloaded from http://www.itemis.com 
			     and will be ignored if it's not available. -->
			<fragment class="org.eclipse.xtext.generator.DelegatingGeneratorFragment" 
				delegate="de.itemis.xtext.antlr.XtextAntlrUiGeneratorFragment"
				message="You are generating without ANTLR. It is highly recommended to download and use the plugin 'de.itemis.xtext.antlr' \n\t using the update site http://download.itemis.com/updates/.">
			</fragment>
			<!-- <fragment class="de.itemis.xtext.antlr.XtextAntlrUiGeneratorFragment"/> --> 

			<!-- builder integration -->
			<fragment class="org.eclipse.xtext.generator.builder.BuilderIntegrationFragment"/>

			<!-- project wizard (optional) -->
			<!--
			<fragment class="org.eclipse.xtext.ui.generator.projectWizard.SimpleProjectWizardFragment"
				generatorProjectName="${projectName}.generator" modelFileExtension="${file.extensions}"/>
			-->
		</language>
	</component>]]>
         </MweSnippet>
      </generatorConfiguration>
   </extension>
   <!--
	<extension
		point="org.eclipse.ui.commands">
		<command
			id="org.eclipse.xtext.xtext.launcher.GenerateArtifacts"
			name="Generate Artifacts"
			categoryId="org.eclipse.xtext.ui.category.XtextEditor"
			description="Executes the language generator for the selected grammar">
		</command>
	</extension>
	<extension
		point="org.eclipse.ui.menus">
		<menuContribution
			locationURI="popup:org.eclipse.ui.popup.any?after=additions">
			<command
				commandId="org.eclipse.xtext.xtext.launcher.GenerateArtifacts"
				style="push">
				<visibleWhen>
					<with variable="activeMenuSelection">
						<iterate>
							<or>
								<adapt type="org.eclipse.xtext.Grammar" />
								<adapt type="org.eclipse.core.resources.IResource">
									<test property="org.eclipse.core.resources.name" value="*.xtext"/>
								</adapt>							
								<adapt type="org.eclipse.jface.text.ITextSelection">
									<reference definitionId="isActiveEditorAnInstanceOfXtextEditor"/>									
								</adapt>
							</or>
						</iterate>
					</with>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension
		point="org.eclipse.ui.handlers">
		<handler
			class="org.eclipse.xtext.xtext.launcher.GenerateArtifacts"
			commandId="org.eclipse.xtext.xtext.launcher.GenerateArtifacts">
		</handler>
	</extension>
	-->
</plugin>
