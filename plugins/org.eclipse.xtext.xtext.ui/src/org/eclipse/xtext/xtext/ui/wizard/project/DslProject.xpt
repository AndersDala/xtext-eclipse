«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»
«IMPORT org::eclipse::xtext::xtext::ui::wizard::project»

«EXTENSION org::eclipse::xtext::xtext::ui::wizard::project::Extensions»

«DEFINE main FOR XtextProjectInfo»
	«EXPAND workflow»
	«EXPAND grammar»
«ENDDEFINE»

«DEFINE workflow FOR XtextProjectInfo»

«FILE basePackagePath+"/"+languageNameAbbreviation+".properties" -»
grammarURI=classpath:/«this.basePackagePath»/«this.languageNameAbbreviation».xtext
file.extensions=«this.firstFileExtension»
projectName=«this.projectName»
«ENDFILE»

«FILE basePackagePath+"/Generate"+languageNameAbbreviation+".mwe" -»
<workflow>
    <property file="«basePackagePath»/«languageNameAbbreviation».properties"/>

    «this.wizardContribution.mweSnippet»
</workflow>
«ENDFILE»

«ENDDEFINE»

«DEFINE grammar FOR XtextProjectInfo»
«FILE basePackagePath+"/"+languageNameAbbreviation+".xtext" -»
«IF EPackagesForRules != null-»
«EXPAND org::eclipse::xtext::xtext::ui::wizard::project::XtextFromEcore::grammar-»
«ELSE-»
«EXPAND defaultGrammar-»
«ENDIF-»
«ENDFILE»
«ENDDEFINE»

«DEFINE defaultGrammar FOR XtextProjectInfo»
grammar «this.languageName» with org.eclipse.xtext.common.Terminals

generate «this.languageNameAbbreviation.toFirstLower()» "«this.nsURI»"

Model returns Namespace:
	(imports+=Import)*
	(elements+=ModelElement)*;
	
ModelElement:
	Namespace | Type;
	
Namespace:
	'namespace' name=FQN '{'
		(imports+=Import)*
		(elements+=ModelElement)*
	'}';

FQN:
	ID ('.' ID)*;

Import :
	'import' importedNamespace=ImportedFQN;

ImportedFQN:
	FQN ('.' '*')?;

Type:
	SimpleType | Entity;
	
SimpleType:
	'type' name=ID;
	
Entity :
	'entity' name=ID ('extends' extends=[Entity|FQN])? '{'
		properties+=Property*
	'}';

Property:
	'property' name=ID ':' type=[Type|FQN] (many?='[]')?;
	
«ENDDEFINE»