«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»

«IMPORT xtext»
«IMPORT xtextgen»

«EXTENSION org::eclipse::xtext::Extensions»
«EXTENSION org::eclipse::xtext::Properties»
«EXTENSION org::eclipse::xtext::ui::UIProperties»

«DEFINE root FOR XtextProjectInfo»
	«EXPAND internalActivator-»
	«EXPAND activator»
«ENDDEFINE»

«DEFINE internalActivator FOR XtextProjectInfo»
«FILE this.languageNameAbbreviation + "Activator.java" ACTIVATOR_GEN_OUTLET-»
package «this.basePackage».ui.internal;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.osgi.framework.BundleContext;

public class «this.languageNameAbbreviation»Activator extends AbstractUIPlugin {

	@Override
	public void start(BundleContext context) throws Exception {
		super.start(context);
		«this.basePackage».«this.languageNameAbbreviation»UiSetup.doSetup();
	}
	
}

«ENDFILE»
«ENDDEFINE»
 
«DEFINE activator FOR XtextProjectInfo»
«FILE "Activator.java" ACTIVATOR_OUTLET-»
package «this.basePackage».ui;

import org.apache.log4j.Logger;
import «this.basePackage».ui.internal.«this.languageNameAbbreviation»Activator;
import org.osgi.framework.BundleContext;

/**
 * The activator class controls the plug-in life cycle
 */
public class Activator extends «this.languageNameAbbreviation»Activator {
	
	Logger logger = Logger.getLogger(Activator.class);

	// The plug-in ID
	public static final String PLUGIN_ID = "«this.projectName».ui";

	// The shared instance
	private static Activator plugin;

	/**
	 * The constructor
	 */
	public Activator() {
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.eclipse.ui.plugin.AbstractUIPlugin#start(org.osgi.framework.BundleContext
	 * )
	 */
	public void start(BundleContext context) throws Exception {
		super.start(context);
		setDefault(this);
		logger.debug("Starting «this.languageNameAbbreviation» activator: " + this.getClass().getName());
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext
	 * )
	 */
	public void stop(BundleContext context) throws Exception {
		setDefault(null);
		super.stop(context);
	}

	/**
	 * Returns the shared instance
	 * 
	 * @return the shared instance
	 */
	public static Activator getDefault() {
		return plugin;
	}

	private static void setDefault(Activator activator) {
		plugin = activator;
	}
}

«ENDFILE»
«ENDDEFINE»