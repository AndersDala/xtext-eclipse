«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 *******************************************************************************/
«ENDREM»

«IMPORT org::eclipse::xtext::xtext::ui::wizard::project»

«EXTENSION org::eclipse::xtext::xtext::ui::wizard::project::Extensions»

«DEFINE main FOR XtextProjectInfo»

«FILE "model/Example."+fileExtension-»
/*
 * This is an example model
 */
Hello world!
Hello Xtext!
Hello Eclipse!
«ENDFILE»

«FILE "templates/Extensions.ext"-»
import «languageNameAbbreviation.toFirstLower()»;

sortedGreetings(Model this) :
	this.greetings.sortBy(g|g.name.toLowerCase());
«ENDFILE»

«FILE "templates/Template.xpt"-»
«OP()»IMPORT «languageNameAbbreviation.toFirstLower()»«CL()»

«OP()»EXTENSION templates::Extensions«CL()»

«OP()»DEFINE main FOR Greeting-«CL()»
«OP()»FILE name+".txt"-«CL()»
This is an example of a generated file.

The input element was "Hello «OP()»name«CL()»!"

All greetings in the same file:
«OP()»FOREACH ((Model)eContainer).sortedGreetings() AS g SEPARATOR ', '«CL()»«OP()»g.name«CL()»«OP()»ENDFOREACH«CL()»
«OP()»ENDFILE-«CL()»
«OP()»ENDDEFINE«CL()»

«OP()»DEFINE salutation FOR Greeting-«CL()»
«OP()»ENDDEFINE«CL()»
«ENDFILE»

«FILE "workflow/"+languageNameAbbreviation+"Generator.mwe2"-»
module workflow.«languageNameAbbreviation»Generator

import org.eclipse.emf.mwe.utils.*

var targetDir = "src-gen"
var fileEncoding = "«encoding»"
var modelPath = "src/model"

Workflow {

	component = org.eclipse.xtext.mwe.Reader {
		// lookup all resources on the classpath
		// useJavaClassPath = true

		// or define search scope explicitly
		path = modelPath

		// this class will be generated by the xtext generator 
		register = «languageName»StandaloneSetup {}
		load = {
			slot = "model"
			type = "Greeting"
		}
	}

	component = org.eclipse.xpand2.Generator {
		metaModel = org.eclipse.xtend.typesystem.emf.EmfRegistryMetaModel {}
		expand = "templates::Template::main FOREACH model"
		outlet = {
			path = targetDir
		}
		fileEncoding = fileEncoding
	}
}
«ENDFILE»

«ENDDEFINE»
