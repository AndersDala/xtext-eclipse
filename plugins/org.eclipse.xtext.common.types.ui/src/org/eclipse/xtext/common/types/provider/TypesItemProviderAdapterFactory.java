/**
 * <copyright>
 * </copyright>
 *
 * $Id: TypesItemProviderAdapterFactory.java,v 1.4 2010/03/02 14:52:55 szarnekow Exp $
 */
package org.eclipse.xtext.common.types.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.xtext.common.types.util.TypesAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class TypesItemProviderAdapterFactory extends TypesAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public TypesItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmVoid} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmVoidItemProvider jvmVoidItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmVoid}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmVoidAdapter() {
		if (jvmVoidItemProvider == null) {
			jvmVoidItemProvider = new JvmVoidItemProvider(this);
		}

		return jvmVoidItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmPrimitiveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmPrimitiveTypeItemProvider jvmPrimitiveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmPrimitiveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmPrimitiveTypeAdapter() {
		if (jvmPrimitiveTypeItemProvider == null) {
			jvmPrimitiveTypeItemProvider = new JvmPrimitiveTypeItemProvider(this);
		}

		return jvmPrimitiveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmArrayType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmArrayTypeItemProvider jvmArrayTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmArrayType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmArrayTypeAdapter() {
		if (jvmArrayTypeItemProvider == null) {
			jvmArrayTypeItemProvider = new JvmArrayTypeItemProvider(this);
		}

		return jvmArrayTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmTypeParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmTypeParameterItemProvider jvmTypeParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmTypeParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmTypeParameterAdapter() {
		if (jvmTypeParameterItemProvider == null) {
			jvmTypeParameterItemProvider = new JvmTypeParameterItemProvider(this);
		}

		return jvmTypeParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmUpperBound} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmUpperBoundItemProvider jvmUpperBoundItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmUpperBound}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmUpperBoundAdapter() {
		if (jvmUpperBoundItemProvider == null) {
			jvmUpperBoundItemProvider = new JvmUpperBoundItemProvider(this);
		}

		return jvmUpperBoundItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmLowerBound} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmLowerBoundItemProvider jvmLowerBoundItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmLowerBound}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmLowerBoundAdapter() {
		if (jvmLowerBoundItemProvider == null) {
			jvmLowerBoundItemProvider = new JvmLowerBoundItemProvider(this);
		}

		return jvmLowerBoundItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmAnnotationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmAnnotationTypeItemProvider jvmAnnotationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmAnnotationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmAnnotationTypeAdapter() {
		if (jvmAnnotationTypeItemProvider == null) {
			jvmAnnotationTypeItemProvider = new JvmAnnotationTypeItemProvider(this);
		}

		return jvmAnnotationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmEnumerationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmEnumerationTypeItemProvider jvmEnumerationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmEnumerationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmEnumerationTypeAdapter() {
		if (jvmEnumerationTypeItemProvider == null) {
			jvmEnumerationTypeItemProvider = new JvmEnumerationTypeItemProvider(this);
		}

		return jvmEnumerationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmGenericType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmGenericTypeItemProvider jvmGenericTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmGenericType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmGenericTypeAdapter() {
		if (jvmGenericTypeItemProvider == null) {
			jvmGenericTypeItemProvider = new JvmGenericTypeItemProvider(this);
		}

		return jvmGenericTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmParameterizedTypeReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmParameterizedTypeReferenceItemProvider jvmParameterizedTypeReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmParameterizedTypeReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmParameterizedTypeReferenceAdapter() {
		if (jvmParameterizedTypeReferenceItemProvider == null) {
			jvmParameterizedTypeReferenceItemProvider = new JvmParameterizedTypeReferenceItemProvider(this);
		}

		return jvmParameterizedTypeReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmGenericArrayTypeReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmGenericArrayTypeReferenceItemProvider jvmGenericArrayTypeReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmGenericArrayTypeReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmGenericArrayTypeReferenceAdapter() {
		if (jvmGenericArrayTypeReferenceItemProvider == null) {
			jvmGenericArrayTypeReferenceItemProvider = new JvmGenericArrayTypeReferenceItemProvider(this);
		}

		return jvmGenericArrayTypeReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmWildcardTypeArgument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmWildcardTypeArgumentItemProvider jvmWildcardTypeArgumentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmWildcardTypeArgument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmWildcardTypeArgumentAdapter() {
		if (jvmWildcardTypeArgumentItemProvider == null) {
			jvmWildcardTypeArgumentItemProvider = new JvmWildcardTypeArgumentItemProvider(this);
		}

		return jvmWildcardTypeArgumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmReferenceTypeArgument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmReferenceTypeArgumentItemProvider jvmReferenceTypeArgumentItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmReferenceTypeArgument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmReferenceTypeArgumentAdapter() {
		if (jvmReferenceTypeArgumentItemProvider == null) {
			jvmReferenceTypeArgumentItemProvider = new JvmReferenceTypeArgumentItemProvider(this);
		}

		return jvmReferenceTypeArgumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmFieldItemProvider jvmFieldItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmFieldAdapter() {
		if (jvmFieldItemProvider == null) {
			jvmFieldItemProvider = new JvmFieldItemProvider(this);
		}

		return jvmFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmConstructor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmConstructorItemProvider jvmConstructorItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmConstructor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmConstructorAdapter() {
		if (jvmConstructorItemProvider == null) {
			jvmConstructorItemProvider = new JvmConstructorItemProvider(this);
		}

		return jvmConstructorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmOperationItemProvider jvmOperationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmOperationAdapter() {
		if (jvmOperationItemProvider == null) {
			jvmOperationItemProvider = new JvmOperationItemProvider(this);
		}

		return jvmOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmFormalParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmFormalParameterItemProvider jvmFormalParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmFormalParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmFormalParameterAdapter() {
		if (jvmFormalParameterItemProvider == null) {
			jvmFormalParameterItemProvider = new JvmFormalParameterItemProvider(this);
		}

		return jvmFormalParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.xtext.common.types.JvmAnnotationReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JvmAnnotationReferenceItemProvider jvmAnnotationReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.xtext.common.types.JvmAnnotationReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJvmAnnotationReferenceAdapter() {
		if (jvmAnnotationReferenceItemProvider == null) {
			jvmAnnotationReferenceItemProvider = new JvmAnnotationReferenceItemProvider(this);
		}

		return jvmAnnotationReferenceItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (jvmVoidItemProvider != null) jvmVoidItemProvider.dispose();
		if (jvmPrimitiveTypeItemProvider != null) jvmPrimitiveTypeItemProvider.dispose();
		if (jvmArrayTypeItemProvider != null) jvmArrayTypeItemProvider.dispose();
		if (jvmTypeParameterItemProvider != null) jvmTypeParameterItemProvider.dispose();
		if (jvmUpperBoundItemProvider != null) jvmUpperBoundItemProvider.dispose();
		if (jvmLowerBoundItemProvider != null) jvmLowerBoundItemProvider.dispose();
		if (jvmAnnotationTypeItemProvider != null) jvmAnnotationTypeItemProvider.dispose();
		if (jvmEnumerationTypeItemProvider != null) jvmEnumerationTypeItemProvider.dispose();
		if (jvmGenericTypeItemProvider != null) jvmGenericTypeItemProvider.dispose();
		if (jvmParameterizedTypeReferenceItemProvider != null) jvmParameterizedTypeReferenceItemProvider.dispose();
		if (jvmGenericArrayTypeReferenceItemProvider != null) jvmGenericArrayTypeReferenceItemProvider.dispose();
		if (jvmWildcardTypeArgumentItemProvider != null) jvmWildcardTypeArgumentItemProvider.dispose();
		if (jvmReferenceTypeArgumentItemProvider != null) jvmReferenceTypeArgumentItemProvider.dispose();
		if (jvmFieldItemProvider != null) jvmFieldItemProvider.dispose();
		if (jvmConstructorItemProvider != null) jvmConstructorItemProvider.dispose();
		if (jvmOperationItemProvider != null) jvmOperationItemProvider.dispose();
		if (jvmFormalParameterItemProvider != null) jvmFormalParameterItemProvider.dispose();
		if (jvmAnnotationReferenceItemProvider != null) jvmAnnotationReferenceItemProvider.dispose();
	}

}
