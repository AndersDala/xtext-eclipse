/*
 * generated by Xtext
 */
package org.eclipse.xtext.ui.tests.editor.contentassist;

import static com.google.common.collect.Iterables.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.xtext.resource.EObjectDescription;
import org.eclipse.xtext.resource.IEObjectDescription;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.scoping.impl.SimpleLocalScopeProvider;
import org.eclipse.xtext.scoping.impl.SimpleScope;
import org.eclipse.xtext.ui.tests.editor.contentassist.bug287941TestLanguage.FromEntry;
import org.eclipse.xtext.ui.tests.editor.contentassist.bug287941TestLanguage.MQLquery;

import com.google.common.base.Function;
import com.google.inject.Binder;
import com.google.inject.name.Names;

/**
 * Use this class to register components to be used within the IDE.
 */
public class Bug287941TestLanguageRuntimeModule extends AbstractBug287941TestLanguageRuntimeModule {

	@Override
	public Class<? extends IScopeProvider> bindIScopeProvider() {
		return ScopeProvider.class;
	}
	
	public void configureIScopeProviderDelegate(Binder binder) {
		binder.bind(IScopeProvider.class).annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(SimpleLocalScopeProvider.class);
	}
	
	public static class ScopeProvider extends AbstractDeclarativeScopeProvider {
		public IScope scope_FromEntry(MQLquery _this, EClass type) {
			Iterable<IEObjectDescription> transformed = transform(
					_this.getFromEntries(),
					new Function<FromEntry, IEObjectDescription>() {

						public IEObjectDescription apply(FromEntry from) {
							return EObjectDescription.create(from.getAlias(), from);
						}
					});
			return new SimpleScope(IScope.NULLSCOPE, transformed);
		}
	}
	
	
}
